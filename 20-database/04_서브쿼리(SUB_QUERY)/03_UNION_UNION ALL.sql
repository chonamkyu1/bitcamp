/* UNION, UNION ALL: 합집합처리
-- UNION: 중복데이터를 제외하고 합해준다.(종복데이터는 1개만 표시)
-- UNION ALL: 중복데이터를 포함해서 합해준다.(중복데이터 모두 사용)
단, 조회하는 컬럼의 이름, 순서, 숫자, 타입이 일치되도록 작성해주어야 한다.
*/
-- UNION 사용
SELECT CUSTID, NAME FROM CUSTOMER WHERE CUSTID IN (1, 2, 3);
SELECT CUSTID, NAME FROM CUSTOMER WHERE CUSTID IN (3, 4, 5);
---- UNION으로 합하기: 중복데이터는 1개만 사용
SELECT CUSTID, NAME FROM CUSTOMER WHERE CUSTID IN (1, 2, 3)
UNION 
SELECT CUSTID, NAME FROM CUSTOMER WHERE CUSTID IN (3, 4, 5)
;
---- UNION ALL으로 합하기: 중복데이터도 모두 사용한다.
SELECT CUSTID, NAME FROM CUSTOMER WHERE CUSTID IN (1, 2, 3)
UNION ALL 
SELECT CUSTID, NAME FROM CUSTOMER WHERE CUSTID IN (3, 4, 5)
ORDER BY NAME -- ORDER BY 절은 마지막에 작성한다.(한번만)
;
------------------------
-- MINUS: 차집합(빼기 연산)
SELECT CUSTID, NAME FROM CUSTOMER WHERE CUSTID IN (1, 2, 3)
MINUS 
SELECT CUSTID, NAME FROM CUSTOMER WHERE CUSTID IN (3, 4, 5)
;
-------------------
-- INTERSECT: 교집합(중복데이터 조회) - 조인문의 동등비교 결과와 동일하다.
SELECT CUSTID, NAME FROM CUSTOMER WHERE CUSTID IN (1, 2, 3)
INTERSECT 
SELECT CUSTID, NAME FROM CUSTOMER WHERE CUSTID IN (3, 3, 4, 5)
;
---- 조인문(JOIN문)
SELECT *
 FROM (SELECT CUSTID, NAME FROM CUSTOMER WHERE CUSTID IN (1, 2, 3)) A
      , (SELECT CUSTID, NAME FROM CUSTOMER WHERE CUSTID IN (3, 4, 5)) B
 WHERE A.CUSTID = B.CUSTID
 AND A.NAME = B.NAME
;
